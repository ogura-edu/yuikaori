モジュールとクラスのどちらを使うかは流儀によるが、クラスの方が厳しく切り分けられるのでよい。モジュールは境界が曖昧になる
ヘルパー...複雑な処理のうち汎用性があるわかりやすい変換処理とかを切り出したメソッド
プライベートメソッド...外部には見せないけど、そのクラスでは分割したい処理を切り出したメソッド
クラスのインターフェースもなるべく小さく
コントローラの処理もなるべく薄く
モデルのメソッドに全て記述するべき
スケジューラをもっとシンプルに
get_images.rb側で責任を持つべき処理はそちらで全て終わらせる。外に見せない。
ActiveRecordを使う

parser 未作成：
http://music-book.jp/book/news/news/141207
https://nizista.com/views/article2?id=8144a060203d11e7a15f1f2b489afec5

優先度 高：
officialsiteのクロール
search->deletion_requestとした時に、全てのmedia_contentsではなくsearch結果を表示できるように
picture,videoを同列にして並べたので、videoの上には再生マークか何かを配置して区別がつくようにする
複数条件を使った検索の実装(便利なgemがありそう)->指定したscopeをチェーンする感じ？
アラートがうるさいので適切な画面で表示されるように修正する
取り急ぎ、yuikaori-reportの画像ファイルはS3に格納したので、あとはDBに登録する。あとひなこの早口言葉１回目
画面内で順番を入れ替えたい。ひとまずは日付で昇降順。
dynoがスリープしてる間に表示するカスタムエラーページ作成 
文字化け治らず。自分でcrawler gemつくるか。。
tmp画面のロードを二重に行っている原因の調査


優先度 低：
各画面のブラッシュアップ 画像選択時のボーダーとチェックマークの色が見辛いので変えたい
タグは手動はきついので機械学習させたい。
CarrierWaveは使いにくかった。。
CSS内画像のくローリングも
データベースからランダムで画像投下機能追加（同じタグなどでまとめて4枚できると面白そう）
ダウンロード機能もつけれるとよさそう
EC2などほかのサーバに上げるとなるとまたいろいろと変更することになるが、ブランチをこのままherokuにするか、masterにマージするかをよく考える
タイル型のボタンにするのもよい。フラットデザイン
各scrapeで、無効なURLパターンを網羅しないといけない（しなくてもいいけどエラー画面ではなくアラート表示にしたい）
search, editで入力時にサジェストする機能を実装する
macのローカル環境でrails cすると日本語が文字化け。。

済：
ユーザーつくる
そもそもタグ検索や並べ替えなど、データベースとして最低限の機能を実装する必要がある
検索メニューをJSなどフロントで実装してよくあるサイトメニュー風に
画像を取得後、一時フォルダor一時データベースに保存して格納する画像を選択できるようにする
multipleアクションのdestroy機能を作成する
サーバに挙げるなら無限スクロールも。->セレクタの問題
ページをリロードしないと選択機能が有効にならない問題未解決->イベントハンドらの発火の問題。turbolinks用のハンドラを設定して解決
背景が途切れる問題未解決->htmlとbodyにheightを指定することで解決
Configを使って定数管理
application_controllerで全体にauthenticaete_user!をbefore_action設定したことでログインを必須にできた
Ameblo,Instagram,Twitterに関しては、アカウントや期間、記事ID、URLを指定することで画像をかき集めてくれるような機能追加
member,tag,eventの値をuniqueに設定する
データベースに元記事URLの格納カラムを作成
masonryを入れた
tmp画面に全選択・全解除ボタンの設置
公式ホームページからの画像取得スクリプト作成(途中まで)
画像追加フォームで、正しい組み合わせでないとエラーを吐くor通知させる
基本的な検索は実装した。
よくある記事サイト（ナタリーなど）はあらかじめパーサを作成し、記事IDか何かを入力することで画像をかき集めてくれるような機能追加
youtubeの埋め込み動画をスクレイプする機能 -> youtube-dl.rbを使用
official_site, news_siteにyoutubeの埋め込み動画パースする部分を追加すること。
editからブラウザバックすると途中なのに最初から画像を読み込んでしまう -> modalを使い、画面遷移しないようにすることで解決可能。modalを導入できたら次点としてajax通信への変更を試みる
画像クリック時に、もダルを使って表示
Videoもモーダル表示
herokuにデプロイ
背景色をグラデーションにしてスクロールしても固定されるように変更
アイテムが4つ未満の時はダミーdivを挿入するようにjqueryで実装。これでサムネイルが小さくなることも防げる。ただし、横に並べる数を増減させるときはダミー挿入部分のイテレータを書き換える必要あり
screenshotやファイル削除の部分を修正
masonryの表示の修正(page=2以降縦の隙間がなくなる)
routesをちゃんと書く。無駄な部分は削除
redirectとともにalertを出す
adminとapprovedをチェックする部分を簡略化できないか（メソッドを定義する？どのモデルに？）
deviseまわりをしっかり理解する。ネットに上げる以上、最優先事項。
ユーザの権限を把握、設定
管理者をつくり、ユーザ管理できるようにする approve,adminアクションを作成、ユーザを管理
strong_parametersをしっかり書く
twitter tweet指定がparse_tweetでエラーはく原因調査 ameblo,instaは動作確認了。->searchでもtweet_modeの指定をしないといけなかった
member_id,event_idを一々引数に書いてるけどもっと楽にかけないものか。 -> initializeでインスタンス変数に入れてしまう。
定期取得や前取得をrakeタスクに登録
addons:process-scheduler,schedulerを追加。
robots.txt作成
modalで表示しているshowテンプレートから、editボタンを押すとeditテンプレートに切り替わってform送信できるように変更
イベント、タグ作成機能を取り急ぎ。
タグ用のgemがある acts as taggable -> なかなかいい感じ。同時にbootstrap-tagsinputも導入。
picture,videoのスーパークラスとしてmediaを作成、メソッドはそこに定義する
コントローラ内の処理部分はモデルに記述する。(pictures,videos)
css, jsファイルを、そのページのコントローラと同名ファイルのみ読み込むようにした
video,pictureではなく、media_contentモデルに焼き直し。
さらに、それぞれに特有のメソッドなどはmedia_contentモデルを継承したそれぞれのクラスを作成してそこで実装。
これにより見た目はvideo,pictureモデルが存在するので、scrape関係のスクリプトはそのまま使える。
instagramのクロールの動作を変更
twitterで小倉唯officialを追加
動画のみ表示、画像のみ表示のボタンを_headerに追加
元記事ボタンを押すと別タブが開くように(_blankを設定？)
media_contentのcontent_typeにenumを設定
